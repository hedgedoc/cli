#!/usr/bin/env bash
# Documentation & Code: https://github.com/hackmdio/codimd-cli

codi_cli=$(basename $0)

help_str="
Options:
    $ $codi_cli import /path/to/your/content.md
    qhmNmwmxSmK1H2oJmkKBQQ       # returns note id on success
    
    $ $codi_cli publish qhmNmwmxSmK1H2oJmkKBQQ
    /s/S1ok9no3f                 # returns published note url
    
    $ $codi_cli export --pdf qhmNmwmxSmK1H2oJmkKBQQ output.pdf
    $ $codi_cli export --md qhmNmwmxSmK1H2oJmkKBQQ output.md
    $ $codi_cli export --html qhmNmwmxSmK1H2oJmkKBQQ output.html
    $ $codi_cli export --slides qhmNmwmxSmK1H2oJmkKBQQ output.zip

Example:
    $ env CODIMD_SERVER='https://codimd.example.com' $codi_cli import /path/to/your/content.md
"

CODIMD_SERVER=${CODIMD_SERVER:="http://127.0.0.1:3000"}  # TODO: allow passing a path to codimd config.json to parse this out

function publish_note() {
    curl "$CODIMD_SERVER/$1/publish" 2>/dev/null | perl -pe 's/Found. Redirecting to \/(.+?)$/\/$1\n/gs'
}

function import_note() {
    curl -q -XPOST -H 'Content-Type: text/markdown' --data-binary "@$1" "$CODIMD_SERVER/new" 2>/dev/null | perl -pe 's/Found. Redirecting to \/(.+?)$/$1\n/gs'
}

function export_note() {
    if [[ $1 == "--pdf" ]]; then
        wget -O "$3" "$CODIMD_SERVER/$2/pdf"
    elif [[ $1 == "--md" ]]; then
        wget -O "$3" "$CODIMD_SERVER/$2/download"
    elif [[ $1 == "--html" ]]; then
        publish_url=$(publish_note "$2")
        wget --recursive --convert-links -O "$3" "$CODIMD_SERVER$publish_url"
    elif [[ $1 == "--slides" ]]; then
        wget --recursive --convert-links -O "$3" "$CODIMD_SERVER/$2/slide"
    else
        echo "Usage: codimd export [--pdf|--md|--html|--slides] <note_id> <output_file>"
    fi
}

if [[ "$1" == "import" ]]; then
    import_note "$2"
elif [[ "$1" == "publish" ]]; then
    publish_note "$2"
elif [[ "$1" == "export" ]]; then
    export_note "$2" "$3" "$4"
else
    echo "$help_str"
fi
